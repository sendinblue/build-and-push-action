name: 'Build and Push'
description: 'Build and push to GCR'
inputs:
  image-name:
    description: 'Image name'
    required: true
  gcp-project-id:
    description: 'GCP project ID'
    required: true
  gcp-service-account-key:
    description: 'GCP service account key'
    required: false
  dockerfile:
    description: 'Name of the Dockerfile to use'
    default: './Dockerfile'
    required: false
  build-options:
    description: 'Additional options to pass to docker build command'
    default: ''
    required: false
  build-path:
    description: 'Location of the build context for the docker build command'
    default: '.'
    required: false
  use-buildkit:
    description: 'Set to "1" to enable DOCKER_BUILDKIT flag'
    default: ''
    required: false
outputs:
  image:
    description: 'Image address'
    value: ${{ steps.image-metadata.outputs.image }}
  image-tag:
    description: 'Image tag'
    value: ${{ steps.image-metadata.outputs.tag }}
runs:
  using: 'composite'
  steps:
    - id: image-metadata
      name: Extract image metadata
      run: |
        REF_NAME=$(echo ${GITHUB_REF#refs/*/} | sed -e 's/^v//')
        TAG=$(printf ${REF_NAME} | tr -c '[[:alnum:]]._-' '_')
        if [[ "${REF_NAME}" == "main" || "${REF_NAME}" == "master" ]]; then TAG=latest; fi
        echo "inputs.gcp-project-id=${{ inputs.gcp-project-id }}"
        echo "inputs.image-name=${{ inputs.image-name }}"
        echo "REF_NAME=$REF_NAME"
        echo "TAG=$TAG"
        echo "::set-output name=tag::$TAG"
        echo "::set-output name=image::$(echo "gcr.io/${{ inputs.gcp-project-id }}/${{ inputs.image-name }}:${TAG}")"
      shell: bash

    # Configure Docker access to the Container Registry
    - run: |
        if [[ -z "$GCP_SERVICE_ACCOUNT_KEY" ]]; then
          gcloud --quiet auth configure-docker gcr.io
        else
          echo "$GCP_SERVICE_ACCOUNT_KEY" | docker login --username _json_key --password-stdin gcr.io
        fi
      env:
        GCP_SERVICE_ACCOUNT_KEY: ${{ inputs.gcp-service-account-key }}
      shell: bash

    - name: Build image
      env:
        DOCKER_BUILDKIT: ${{ inputs.use-buildkit }}
      run: |
        if [[ -n "$DOCKER_BUILDKIT" ]]; then DOCKER_BUILDKIT_OPTIONS="--progress=plain"; fi
        docker build \
          $DOCKER_BUILDKIT_OPTIONS \
          --tag "${{ steps.image-metadata.outputs.image }}" \
          --file "${{ inputs.dockerfile }}" \
          ${{ inputs.build-options }} \
          ${{ inputs.build-path }}
      shell: bash

    - name: Publish images to GCR
      run: |
        docker push "${{ steps.image-metadata.outputs.image }}"
      shell: bash
