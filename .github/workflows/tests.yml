name: Test action
on:
  push:
jobs:
  should-set-outputs:
    name: Should set outputs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: 'dimw/mockbin-action@main'
        with:
          commands: |
            docker

      - name: Act
        id: act
        uses: './'
        with:
          image-name: 'example-app'
          image-tag: test
          gcp-service-account-key: |-
            {
              "type": "service_account",
              "project_id": "my-project-1234",
              "client_email": "foo@example.com"
            }

      - uses: 'dimw/mockbin-action@main'
        with:
          commands: docker
          assert-args: |
            ["login", "--username", "_json_key", "--password-stdin", "gcr.io"]
            ["build", "--tag", "gcr.io/my-project-1234/example-app:test", "--file", "./Dockerfile", "."]
            ["push", "gcr.io/my-project-1234/example-app:test"]

      - run: |
          if [[ "${{ steps.act.outputs.image }}" != "gcr.io/my-project-1234/example-app:test" ]]; then
            echo "Expected outputs.image='gcr.io/my-project-1234/example-app:test' but got '${{ steps.act.outputs.image }}'!"
            exit 1
          fi

          if [[ "${{ steps.act.outputs.image-full-name }}" != "gcr.io/my-project-1234/example-app" ]]; then
            echo "Expected outputs.image='gcr.io/my-project-1234/example-app' but got '${{ steps.act.outputs.image-full-name }}'!"
            exit 1
          fi

          if [[ "${{ steps.act.outputs.image-tag }}" != "test" ]]; then
            echo "Expected outputs.image-tag='test' but got '${{ steps.act.outputs.image-tag }}'!"
            exit 1
          fi

          if [[ "${{ steps.act.outputs.image-digest }}" != "sha256:8414aa82208bc4c2761dc149df67e25c6b8a9380e5d8c4e7b5c84ca2d04bb244" ]]; then
            echo "Expected outputs.image-digest='sha256:8414aa82208bc4c2761dc149df67e25c6b8a9380e5d8c4e7b5c84ca2d04bb244' but got '${{ steps.act.outputs.image-digest }}'!"
            # TODO enable as soon as the mock is capable retrieving the digest
            # exit 1
          fi

  should-use-provided-gcp-project-id:
    name: Should use inputs.project-id
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: 'dimw/mockbin-action@main'
        with:
          commands: |
            docker

      - name: Act
        uses: './'
        with:
          image-name: 'example-app'
          image-tag: test
          gcp-project-id: foo-project
          gcp-service-account-key: |-
            {
              "type": "service_account",
              "project_id": "my-project-1234",
              "client_email": "foo@example.com"
            }

      - uses: 'dimw/mockbin-action@main'
        with:
          commands: docker
          assert-args: |
            ["login", "--username", "_json_key", "--password-stdin", "gcr.io"]
            ["build", "--tag", "gcr.io/foo-project/example-app:test", "--file", "./Dockerfile", "."]
            ["push", "gcr.io/foo-project/example-app:test"]

  should-use-provided-registry:
    name: Should use inputs.registry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: 'dimw/mockbin-action@main'
        with:
          commands: |
            docker

      - name: Act
        uses: './'
        with:
          image-name: 'example-app'
          image-tag: test
          registry: registry.example.com
          gcp-service-account-key: |-
            {
              "type": "service_account",
              "project_id": "my-project-1234",
              "client_email": "foo@example.com"
            }

      - uses: 'dimw/mockbin-action@main'
        with:
          commands: docker
          assert-args: |
            ["login", "--username", "_json_key", "--password-stdin", "registry.example.com"]
            ["build", "--tag", "registry.example.com/my-project-1234/example-app:test", "--file", "./Dockerfile", "."]
            ["push", "registry.example.com/my-project-1234/example-app:test"]

  should-use-gcloud-if-no-key:
    name: Should use gcloud if no GCR key provided
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: 'dimw/mockbin-action@main'
        with:
          commands: |
            docker
            gcloud

      - name: Act
        uses: './'
        with:
          image-name: 'example-app'
          image-tag: test
          gcp-project-id: my-project-1234

      - uses: 'dimw/mockbin-action@main'
        with:
          commands: gcloud
          assert-args: |
            ["--quiet", "auth", "configure-docker", "gcr.io"]

      - uses: 'dimw/mockbin-action@main'
        with:
          commands: docker
          assert-args: |
            ["build", "--tag", "gcr.io/my-project-1234/example-app:test", "--file", "./Dockerfile", "."]
            ["push", "gcr.io/my-project-1234/example-app:test"]
